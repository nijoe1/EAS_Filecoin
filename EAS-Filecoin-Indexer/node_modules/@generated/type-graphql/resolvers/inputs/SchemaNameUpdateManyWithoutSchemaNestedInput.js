"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SchemaNameUpdateManyWithoutSchemaNestedInput = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = tslib_1.__importStar(require("type-graphql"));
const SchemaNameCreateManySchemaInputEnvelope_1 = require("../inputs/SchemaNameCreateManySchemaInputEnvelope");
const SchemaNameCreateOrConnectWithoutSchemaInput_1 = require("../inputs/SchemaNameCreateOrConnectWithoutSchemaInput");
const SchemaNameCreateWithoutSchemaInput_1 = require("../inputs/SchemaNameCreateWithoutSchemaInput");
const SchemaNameScalarWhereInput_1 = require("../inputs/SchemaNameScalarWhereInput");
const SchemaNameUpdateManyWithWhereWithoutSchemaInput_1 = require("../inputs/SchemaNameUpdateManyWithWhereWithoutSchemaInput");
const SchemaNameUpdateWithWhereUniqueWithoutSchemaInput_1 = require("../inputs/SchemaNameUpdateWithWhereUniqueWithoutSchemaInput");
const SchemaNameUpsertWithWhereUniqueWithoutSchemaInput_1 = require("../inputs/SchemaNameUpsertWithWhereUniqueWithoutSchemaInput");
const SchemaNameWhereUniqueInput_1 = require("../inputs/SchemaNameWhereUniqueInput");
let SchemaNameUpdateManyWithoutSchemaNestedInput = class SchemaNameUpdateManyWithoutSchemaNestedInput {
};
tslib_1.__decorate([
    TypeGraphQL.Field(_type => [SchemaNameCreateWithoutSchemaInput_1.SchemaNameCreateWithoutSchemaInput], {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Array)
], SchemaNameUpdateManyWithoutSchemaNestedInput.prototype, "create", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => [SchemaNameCreateOrConnectWithoutSchemaInput_1.SchemaNameCreateOrConnectWithoutSchemaInput], {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Array)
], SchemaNameUpdateManyWithoutSchemaNestedInput.prototype, "connectOrCreate", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => [SchemaNameUpsertWithWhereUniqueWithoutSchemaInput_1.SchemaNameUpsertWithWhereUniqueWithoutSchemaInput], {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Array)
], SchemaNameUpdateManyWithoutSchemaNestedInput.prototype, "upsert", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => SchemaNameCreateManySchemaInputEnvelope_1.SchemaNameCreateManySchemaInputEnvelope, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", SchemaNameCreateManySchemaInputEnvelope_1.SchemaNameCreateManySchemaInputEnvelope)
], SchemaNameUpdateManyWithoutSchemaNestedInput.prototype, "createMany", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => [SchemaNameWhereUniqueInput_1.SchemaNameWhereUniqueInput], {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Array)
], SchemaNameUpdateManyWithoutSchemaNestedInput.prototype, "set", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => [SchemaNameWhereUniqueInput_1.SchemaNameWhereUniqueInput], {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Array)
], SchemaNameUpdateManyWithoutSchemaNestedInput.prototype, "disconnect", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => [SchemaNameWhereUniqueInput_1.SchemaNameWhereUniqueInput], {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Array)
], SchemaNameUpdateManyWithoutSchemaNestedInput.prototype, "delete", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => [SchemaNameWhereUniqueInput_1.SchemaNameWhereUniqueInput], {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Array)
], SchemaNameUpdateManyWithoutSchemaNestedInput.prototype, "connect", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => [SchemaNameUpdateWithWhereUniqueWithoutSchemaInput_1.SchemaNameUpdateWithWhereUniqueWithoutSchemaInput], {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Array)
], SchemaNameUpdateManyWithoutSchemaNestedInput.prototype, "update", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => [SchemaNameUpdateManyWithWhereWithoutSchemaInput_1.SchemaNameUpdateManyWithWhereWithoutSchemaInput], {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Array)
], SchemaNameUpdateManyWithoutSchemaNestedInput.prototype, "updateMany", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => [SchemaNameScalarWhereInput_1.SchemaNameScalarWhereInput], {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Array)
], SchemaNameUpdateManyWithoutSchemaNestedInput.prototype, "deleteMany", void 0);
SchemaNameUpdateManyWithoutSchemaNestedInput = tslib_1.__decorate([
    TypeGraphQL.InputType("SchemaNameUpdateManyWithoutSchemaNestedInput", {
        isAbstract: true
    })
], SchemaNameUpdateManyWithoutSchemaNestedInput);
exports.SchemaNameUpdateManyWithoutSchemaNestedInput = SchemaNameUpdateManyWithoutSchemaNestedInput;
