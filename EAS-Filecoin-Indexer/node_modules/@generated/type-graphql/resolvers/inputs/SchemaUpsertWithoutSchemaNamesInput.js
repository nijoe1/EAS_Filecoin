"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SchemaUpsertWithoutSchemaNamesInput = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = tslib_1.__importStar(require("type-graphql"));
const SchemaCreateWithoutSchemaNamesInput_1 = require("../inputs/SchemaCreateWithoutSchemaNamesInput");
const SchemaUpdateWithoutSchemaNamesInput_1 = require("../inputs/SchemaUpdateWithoutSchemaNamesInput");
let SchemaUpsertWithoutSchemaNamesInput = class SchemaUpsertWithoutSchemaNamesInput {
};
tslib_1.__decorate([
    TypeGraphQL.Field(_type => SchemaUpdateWithoutSchemaNamesInput_1.SchemaUpdateWithoutSchemaNamesInput, {
        nullable: false
    }),
    tslib_1.__metadata("design:type", SchemaUpdateWithoutSchemaNamesInput_1.SchemaUpdateWithoutSchemaNamesInput)
], SchemaUpsertWithoutSchemaNamesInput.prototype, "update", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => SchemaCreateWithoutSchemaNamesInput_1.SchemaCreateWithoutSchemaNamesInput, {
        nullable: false
    }),
    tslib_1.__metadata("design:type", SchemaCreateWithoutSchemaNamesInput_1.SchemaCreateWithoutSchemaNamesInput)
], SchemaUpsertWithoutSchemaNamesInput.prototype, "create", void 0);
SchemaUpsertWithoutSchemaNamesInput = tslib_1.__decorate([
    TypeGraphQL.InputType("SchemaUpsertWithoutSchemaNamesInput", {
        isAbstract: true
    })
], SchemaUpsertWithoutSchemaNamesInput);
exports.SchemaUpsertWithoutSchemaNamesInput = SchemaUpsertWithoutSchemaNamesInput;
