"use strict";
var SchemaWhereInput_1;
Object.defineProperty(exports, "__esModule", { value: true });
exports.SchemaWhereInput = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = tslib_1.__importStar(require("type-graphql"));
const AttestationListRelationFilter_1 = require("../inputs/AttestationListRelationFilter");
const BoolFilter_1 = require("../inputs/BoolFilter");
const IntFilter_1 = require("../inputs/IntFilter");
const SchemaNameListRelationFilter_1 = require("../inputs/SchemaNameListRelationFilter");
const StringFilter_1 = require("../inputs/StringFilter");
let SchemaWhereInput = SchemaWhereInput_1 = class SchemaWhereInput {
};
tslib_1.__decorate([
    TypeGraphQL.Field(_type => [SchemaWhereInput_1], {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Array)
], SchemaWhereInput.prototype, "AND", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => [SchemaWhereInput_1], {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Array)
], SchemaWhereInput.prototype, "OR", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => [SchemaWhereInput_1], {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Array)
], SchemaWhereInput.prototype, "NOT", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => StringFilter_1.StringFilter, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", StringFilter_1.StringFilter)
], SchemaWhereInput.prototype, "id", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => StringFilter_1.StringFilter, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", StringFilter_1.StringFilter)
], SchemaWhereInput.prototype, "schema", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => StringFilter_1.StringFilter, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", StringFilter_1.StringFilter)
], SchemaWhereInput.prototype, "creator", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => StringFilter_1.StringFilter, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", StringFilter_1.StringFilter)
], SchemaWhereInput.prototype, "resolver", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => BoolFilter_1.BoolFilter, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", BoolFilter_1.BoolFilter)
], SchemaWhereInput.prototype, "revocable", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => StringFilter_1.StringFilter, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", StringFilter_1.StringFilter)
], SchemaWhereInput.prototype, "index", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => StringFilter_1.StringFilter, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", StringFilter_1.StringFilter)
], SchemaWhereInput.prototype, "txid", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => IntFilter_1.IntFilter, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", IntFilter_1.IntFilter)
], SchemaWhereInput.prototype, "time", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => AttestationListRelationFilter_1.AttestationListRelationFilter, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", AttestationListRelationFilter_1.AttestationListRelationFilter)
], SchemaWhereInput.prototype, "attestations", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => SchemaNameListRelationFilter_1.SchemaNameListRelationFilter, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", SchemaNameListRelationFilter_1.SchemaNameListRelationFilter)
], SchemaWhereInput.prototype, "schemaNames", void 0);
SchemaWhereInput = SchemaWhereInput_1 = tslib_1.__decorate([
    TypeGraphQL.InputType("SchemaWhereInput", {
        isAbstract: true
    })
], SchemaWhereInput);
exports.SchemaWhereInput = SchemaWhereInput;
