"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TimestampOrderByWithAggregationInput = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = tslib_1.__importStar(require("type-graphql"));
const TimestampAvgOrderByAggregateInput_1 = require("../inputs/TimestampAvgOrderByAggregateInput");
const TimestampCountOrderByAggregateInput_1 = require("../inputs/TimestampCountOrderByAggregateInput");
const TimestampMaxOrderByAggregateInput_1 = require("../inputs/TimestampMaxOrderByAggregateInput");
const TimestampMinOrderByAggregateInput_1 = require("../inputs/TimestampMinOrderByAggregateInput");
const TimestampSumOrderByAggregateInput_1 = require("../inputs/TimestampSumOrderByAggregateInput");
const SortOrder_1 = require("../../enums/SortOrder");
let TimestampOrderByWithAggregationInput = class TimestampOrderByWithAggregationInput {
};
tslib_1.__decorate([
    TypeGraphQL.Field(_type => SortOrder_1.SortOrder, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", String)
], TimestampOrderByWithAggregationInput.prototype, "id", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => SortOrder_1.SortOrder, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", String)
], TimestampOrderByWithAggregationInput.prototype, "from", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => SortOrder_1.SortOrder, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", String)
], TimestampOrderByWithAggregationInput.prototype, "txid", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => SortOrder_1.SortOrder, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", String)
], TimestampOrderByWithAggregationInput.prototype, "tree", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => SortOrder_1.SortOrder, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", String)
], TimestampOrderByWithAggregationInput.prototype, "timestamp", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => TimestampCountOrderByAggregateInput_1.TimestampCountOrderByAggregateInput, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", TimestampCountOrderByAggregateInput_1.TimestampCountOrderByAggregateInput)
], TimestampOrderByWithAggregationInput.prototype, "_count", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => TimestampAvgOrderByAggregateInput_1.TimestampAvgOrderByAggregateInput, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", TimestampAvgOrderByAggregateInput_1.TimestampAvgOrderByAggregateInput)
], TimestampOrderByWithAggregationInput.prototype, "_avg", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => TimestampMaxOrderByAggregateInput_1.TimestampMaxOrderByAggregateInput, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", TimestampMaxOrderByAggregateInput_1.TimestampMaxOrderByAggregateInput)
], TimestampOrderByWithAggregationInput.prototype, "_max", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => TimestampMinOrderByAggregateInput_1.TimestampMinOrderByAggregateInput, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", TimestampMinOrderByAggregateInput_1.TimestampMinOrderByAggregateInput)
], TimestampOrderByWithAggregationInput.prototype, "_min", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => TimestampSumOrderByAggregateInput_1.TimestampSumOrderByAggregateInput, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", TimestampSumOrderByAggregateInput_1.TimestampSumOrderByAggregateInput)
], TimestampOrderByWithAggregationInput.prototype, "_sum", void 0);
TimestampOrderByWithAggregationInput = tslib_1.__decorate([
    TypeGraphQL.InputType("TimestampOrderByWithAggregationInput", {
        isAbstract: true
    })
], TimestampOrderByWithAggregationInput);
exports.TimestampOrderByWithAggregationInput = TimestampOrderByWithAggregationInput;
