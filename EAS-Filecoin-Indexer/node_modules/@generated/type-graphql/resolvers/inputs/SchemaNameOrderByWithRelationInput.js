"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SchemaNameOrderByWithRelationInput = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = tslib_1.__importStar(require("type-graphql"));
const SchemaOrderByWithRelationInput_1 = require("../inputs/SchemaOrderByWithRelationInput");
const SortOrder_1 = require("../../enums/SortOrder");
let SchemaNameOrderByWithRelationInput = class SchemaNameOrderByWithRelationInput {
};
tslib_1.__decorate([
    TypeGraphQL.Field(_type => SortOrder_1.SortOrder, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", String)
], SchemaNameOrderByWithRelationInput.prototype, "id", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => SortOrder_1.SortOrder, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", String)
], SchemaNameOrderByWithRelationInput.prototype, "schemaId", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => SortOrder_1.SortOrder, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", String)
], SchemaNameOrderByWithRelationInput.prototype, "attesterAddress", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => SortOrder_1.SortOrder, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", String)
], SchemaNameOrderByWithRelationInput.prototype, "name", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => SortOrder_1.SortOrder, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", String)
], SchemaNameOrderByWithRelationInput.prototype, "time", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => SortOrder_1.SortOrder, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", String)
], SchemaNameOrderByWithRelationInput.prototype, "isCreator", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => SchemaOrderByWithRelationInput_1.SchemaOrderByWithRelationInput, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", SchemaOrderByWithRelationInput_1.SchemaOrderByWithRelationInput)
], SchemaNameOrderByWithRelationInput.prototype, "schema", void 0);
SchemaNameOrderByWithRelationInput = tslib_1.__decorate([
    TypeGraphQL.InputType("SchemaNameOrderByWithRelationInput", {
        isAbstract: true
    })
], SchemaNameOrderByWithRelationInput);
exports.SchemaNameOrderByWithRelationInput = SchemaNameOrderByWithRelationInput;
