"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AttestationCreateNestedManyWithoutSchemaInput = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = tslib_1.__importStar(require("type-graphql"));
const AttestationCreateManySchemaInputEnvelope_1 = require("../inputs/AttestationCreateManySchemaInputEnvelope");
const AttestationCreateOrConnectWithoutSchemaInput_1 = require("../inputs/AttestationCreateOrConnectWithoutSchemaInput");
const AttestationCreateWithoutSchemaInput_1 = require("../inputs/AttestationCreateWithoutSchemaInput");
const AttestationWhereUniqueInput_1 = require("../inputs/AttestationWhereUniqueInput");
let AttestationCreateNestedManyWithoutSchemaInput = class AttestationCreateNestedManyWithoutSchemaInput {
};
tslib_1.__decorate([
    TypeGraphQL.Field(_type => [AttestationCreateWithoutSchemaInput_1.AttestationCreateWithoutSchemaInput], {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Array)
], AttestationCreateNestedManyWithoutSchemaInput.prototype, "create", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => [AttestationCreateOrConnectWithoutSchemaInput_1.AttestationCreateOrConnectWithoutSchemaInput], {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Array)
], AttestationCreateNestedManyWithoutSchemaInput.prototype, "connectOrCreate", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => AttestationCreateManySchemaInputEnvelope_1.AttestationCreateManySchemaInputEnvelope, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", AttestationCreateManySchemaInputEnvelope_1.AttestationCreateManySchemaInputEnvelope)
], AttestationCreateNestedManyWithoutSchemaInput.prototype, "createMany", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => [AttestationWhereUniqueInput_1.AttestationWhereUniqueInput], {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Array)
], AttestationCreateNestedManyWithoutSchemaInput.prototype, "connect", void 0);
AttestationCreateNestedManyWithoutSchemaInput = tslib_1.__decorate([
    TypeGraphQL.InputType("AttestationCreateNestedManyWithoutSchemaInput", {
        isAbstract: true
    })
], AttestationCreateNestedManyWithoutSchemaInput);
exports.AttestationCreateNestedManyWithoutSchemaInput = AttestationCreateNestedManyWithoutSchemaInput;
