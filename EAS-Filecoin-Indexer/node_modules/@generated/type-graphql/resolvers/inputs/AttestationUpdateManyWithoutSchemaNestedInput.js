"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AttestationUpdateManyWithoutSchemaNestedInput = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = tslib_1.__importStar(require("type-graphql"));
const AttestationCreateManySchemaInputEnvelope_1 = require("../inputs/AttestationCreateManySchemaInputEnvelope");
const AttestationCreateOrConnectWithoutSchemaInput_1 = require("../inputs/AttestationCreateOrConnectWithoutSchemaInput");
const AttestationCreateWithoutSchemaInput_1 = require("../inputs/AttestationCreateWithoutSchemaInput");
const AttestationScalarWhereInput_1 = require("../inputs/AttestationScalarWhereInput");
const AttestationUpdateManyWithWhereWithoutSchemaInput_1 = require("../inputs/AttestationUpdateManyWithWhereWithoutSchemaInput");
const AttestationUpdateWithWhereUniqueWithoutSchemaInput_1 = require("../inputs/AttestationUpdateWithWhereUniqueWithoutSchemaInput");
const AttestationUpsertWithWhereUniqueWithoutSchemaInput_1 = require("../inputs/AttestationUpsertWithWhereUniqueWithoutSchemaInput");
const AttestationWhereUniqueInput_1 = require("../inputs/AttestationWhereUniqueInput");
let AttestationUpdateManyWithoutSchemaNestedInput = class AttestationUpdateManyWithoutSchemaNestedInput {
};
tslib_1.__decorate([
    TypeGraphQL.Field(_type => [AttestationCreateWithoutSchemaInput_1.AttestationCreateWithoutSchemaInput], {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Array)
], AttestationUpdateManyWithoutSchemaNestedInput.prototype, "create", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => [AttestationCreateOrConnectWithoutSchemaInput_1.AttestationCreateOrConnectWithoutSchemaInput], {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Array)
], AttestationUpdateManyWithoutSchemaNestedInput.prototype, "connectOrCreate", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => [AttestationUpsertWithWhereUniqueWithoutSchemaInput_1.AttestationUpsertWithWhereUniqueWithoutSchemaInput], {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Array)
], AttestationUpdateManyWithoutSchemaNestedInput.prototype, "upsert", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => AttestationCreateManySchemaInputEnvelope_1.AttestationCreateManySchemaInputEnvelope, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", AttestationCreateManySchemaInputEnvelope_1.AttestationCreateManySchemaInputEnvelope)
], AttestationUpdateManyWithoutSchemaNestedInput.prototype, "createMany", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => [AttestationWhereUniqueInput_1.AttestationWhereUniqueInput], {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Array)
], AttestationUpdateManyWithoutSchemaNestedInput.prototype, "set", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => [AttestationWhereUniqueInput_1.AttestationWhereUniqueInput], {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Array)
], AttestationUpdateManyWithoutSchemaNestedInput.prototype, "disconnect", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => [AttestationWhereUniqueInput_1.AttestationWhereUniqueInput], {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Array)
], AttestationUpdateManyWithoutSchemaNestedInput.prototype, "delete", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => [AttestationWhereUniqueInput_1.AttestationWhereUniqueInput], {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Array)
], AttestationUpdateManyWithoutSchemaNestedInput.prototype, "connect", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => [AttestationUpdateWithWhereUniqueWithoutSchemaInput_1.AttestationUpdateWithWhereUniqueWithoutSchemaInput], {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Array)
], AttestationUpdateManyWithoutSchemaNestedInput.prototype, "update", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => [AttestationUpdateManyWithWhereWithoutSchemaInput_1.AttestationUpdateManyWithWhereWithoutSchemaInput], {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Array)
], AttestationUpdateManyWithoutSchemaNestedInput.prototype, "updateMany", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => [AttestationScalarWhereInput_1.AttestationScalarWhereInput], {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Array)
], AttestationUpdateManyWithoutSchemaNestedInput.prototype, "deleteMany", void 0);
AttestationUpdateManyWithoutSchemaNestedInput = tslib_1.__decorate([
    TypeGraphQL.InputType("AttestationUpdateManyWithoutSchemaNestedInput", {
        isAbstract: true
    })
], AttestationUpdateManyWithoutSchemaNestedInput);
exports.AttestationUpdateManyWithoutSchemaNestedInput = AttestationUpdateManyWithoutSchemaNestedInput;
