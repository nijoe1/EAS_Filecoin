"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SchemaNameUpsertWithWhereUniqueWithoutSchemaInput = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = tslib_1.__importStar(require("type-graphql"));
const SchemaNameCreateWithoutSchemaInput_1 = require("../inputs/SchemaNameCreateWithoutSchemaInput");
const SchemaNameUpdateWithoutSchemaInput_1 = require("../inputs/SchemaNameUpdateWithoutSchemaInput");
const SchemaNameWhereUniqueInput_1 = require("../inputs/SchemaNameWhereUniqueInput");
let SchemaNameUpsertWithWhereUniqueWithoutSchemaInput = class SchemaNameUpsertWithWhereUniqueWithoutSchemaInput {
};
tslib_1.__decorate([
    TypeGraphQL.Field(_type => SchemaNameWhereUniqueInput_1.SchemaNameWhereUniqueInput, {
        nullable: false
    }),
    tslib_1.__metadata("design:type", SchemaNameWhereUniqueInput_1.SchemaNameWhereUniqueInput)
], SchemaNameUpsertWithWhereUniqueWithoutSchemaInput.prototype, "where", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => SchemaNameUpdateWithoutSchemaInput_1.SchemaNameUpdateWithoutSchemaInput, {
        nullable: false
    }),
    tslib_1.__metadata("design:type", SchemaNameUpdateWithoutSchemaInput_1.SchemaNameUpdateWithoutSchemaInput)
], SchemaNameUpsertWithWhereUniqueWithoutSchemaInput.prototype, "update", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => SchemaNameCreateWithoutSchemaInput_1.SchemaNameCreateWithoutSchemaInput, {
        nullable: false
    }),
    tslib_1.__metadata("design:type", SchemaNameCreateWithoutSchemaInput_1.SchemaNameCreateWithoutSchemaInput)
], SchemaNameUpsertWithWhereUniqueWithoutSchemaInput.prototype, "create", void 0);
SchemaNameUpsertWithWhereUniqueWithoutSchemaInput = tslib_1.__decorate([
    TypeGraphQL.InputType("SchemaNameUpsertWithWhereUniqueWithoutSchemaInput", {
        isAbstract: true
    })
], SchemaNameUpsertWithWhereUniqueWithoutSchemaInput);
exports.SchemaNameUpsertWithWhereUniqueWithoutSchemaInput = SchemaNameUpsertWithWhereUniqueWithoutSchemaInput;
