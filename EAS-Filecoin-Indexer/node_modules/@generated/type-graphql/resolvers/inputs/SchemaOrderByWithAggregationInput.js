"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SchemaOrderByWithAggregationInput = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = tslib_1.__importStar(require("type-graphql"));
const SchemaAvgOrderByAggregateInput_1 = require("../inputs/SchemaAvgOrderByAggregateInput");
const SchemaCountOrderByAggregateInput_1 = require("../inputs/SchemaCountOrderByAggregateInput");
const SchemaMaxOrderByAggregateInput_1 = require("../inputs/SchemaMaxOrderByAggregateInput");
const SchemaMinOrderByAggregateInput_1 = require("../inputs/SchemaMinOrderByAggregateInput");
const SchemaSumOrderByAggregateInput_1 = require("../inputs/SchemaSumOrderByAggregateInput");
const SortOrder_1 = require("../../enums/SortOrder");
let SchemaOrderByWithAggregationInput = class SchemaOrderByWithAggregationInput {
};
tslib_1.__decorate([
    TypeGraphQL.Field(_type => SortOrder_1.SortOrder, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", String)
], SchemaOrderByWithAggregationInput.prototype, "id", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => SortOrder_1.SortOrder, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", String)
], SchemaOrderByWithAggregationInput.prototype, "schema", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => SortOrder_1.SortOrder, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", String)
], SchemaOrderByWithAggregationInput.prototype, "creator", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => SortOrder_1.SortOrder, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", String)
], SchemaOrderByWithAggregationInput.prototype, "resolver", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => SortOrder_1.SortOrder, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", String)
], SchemaOrderByWithAggregationInput.prototype, "revocable", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => SortOrder_1.SortOrder, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", String)
], SchemaOrderByWithAggregationInput.prototype, "index", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => SortOrder_1.SortOrder, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", String)
], SchemaOrderByWithAggregationInput.prototype, "txid", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => SortOrder_1.SortOrder, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", String)
], SchemaOrderByWithAggregationInput.prototype, "time", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => SchemaCountOrderByAggregateInput_1.SchemaCountOrderByAggregateInput, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", SchemaCountOrderByAggregateInput_1.SchemaCountOrderByAggregateInput)
], SchemaOrderByWithAggregationInput.prototype, "_count", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => SchemaAvgOrderByAggregateInput_1.SchemaAvgOrderByAggregateInput, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", SchemaAvgOrderByAggregateInput_1.SchemaAvgOrderByAggregateInput)
], SchemaOrderByWithAggregationInput.prototype, "_avg", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => SchemaMaxOrderByAggregateInput_1.SchemaMaxOrderByAggregateInput, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", SchemaMaxOrderByAggregateInput_1.SchemaMaxOrderByAggregateInput)
], SchemaOrderByWithAggregationInput.prototype, "_max", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => SchemaMinOrderByAggregateInput_1.SchemaMinOrderByAggregateInput, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", SchemaMinOrderByAggregateInput_1.SchemaMinOrderByAggregateInput)
], SchemaOrderByWithAggregationInput.prototype, "_min", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => SchemaSumOrderByAggregateInput_1.SchemaSumOrderByAggregateInput, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", SchemaSumOrderByAggregateInput_1.SchemaSumOrderByAggregateInput)
], SchemaOrderByWithAggregationInput.prototype, "_sum", void 0);
SchemaOrderByWithAggregationInput = tslib_1.__decorate([
    TypeGraphQL.InputType("SchemaOrderByWithAggregationInput", {
        isAbstract: true
    })
], SchemaOrderByWithAggregationInput);
exports.SchemaOrderByWithAggregationInput = SchemaOrderByWithAggregationInput;
