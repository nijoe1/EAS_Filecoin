"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SchemaCreateNestedOneWithoutAttestationsInput = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = tslib_1.__importStar(require("type-graphql"));
const SchemaCreateOrConnectWithoutAttestationsInput_1 = require("../inputs/SchemaCreateOrConnectWithoutAttestationsInput");
const SchemaCreateWithoutAttestationsInput_1 = require("../inputs/SchemaCreateWithoutAttestationsInput");
const SchemaWhereUniqueInput_1 = require("../inputs/SchemaWhereUniqueInput");
let SchemaCreateNestedOneWithoutAttestationsInput = class SchemaCreateNestedOneWithoutAttestationsInput {
};
tslib_1.__decorate([
    TypeGraphQL.Field(_type => SchemaCreateWithoutAttestationsInput_1.SchemaCreateWithoutAttestationsInput, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", SchemaCreateWithoutAttestationsInput_1.SchemaCreateWithoutAttestationsInput)
], SchemaCreateNestedOneWithoutAttestationsInput.prototype, "create", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => SchemaCreateOrConnectWithoutAttestationsInput_1.SchemaCreateOrConnectWithoutAttestationsInput, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", SchemaCreateOrConnectWithoutAttestationsInput_1.SchemaCreateOrConnectWithoutAttestationsInput)
], SchemaCreateNestedOneWithoutAttestationsInput.prototype, "connectOrCreate", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => SchemaWhereUniqueInput_1.SchemaWhereUniqueInput, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", SchemaWhereUniqueInput_1.SchemaWhereUniqueInput)
], SchemaCreateNestedOneWithoutAttestationsInput.prototype, "connect", void 0);
SchemaCreateNestedOneWithoutAttestationsInput = tslib_1.__decorate([
    TypeGraphQL.InputType("SchemaCreateNestedOneWithoutAttestationsInput", {
        isAbstract: true
    })
], SchemaCreateNestedOneWithoutAttestationsInput);
exports.SchemaCreateNestedOneWithoutAttestationsInput = SchemaCreateNestedOneWithoutAttestationsInput;
