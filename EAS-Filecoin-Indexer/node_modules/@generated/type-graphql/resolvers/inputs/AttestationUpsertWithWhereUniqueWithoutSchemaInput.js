"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AttestationUpsertWithWhereUniqueWithoutSchemaInput = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = tslib_1.__importStar(require("type-graphql"));
const AttestationCreateWithoutSchemaInput_1 = require("../inputs/AttestationCreateWithoutSchemaInput");
const AttestationUpdateWithoutSchemaInput_1 = require("../inputs/AttestationUpdateWithoutSchemaInput");
const AttestationWhereUniqueInput_1 = require("../inputs/AttestationWhereUniqueInput");
let AttestationUpsertWithWhereUniqueWithoutSchemaInput = class AttestationUpsertWithWhereUniqueWithoutSchemaInput {
};
tslib_1.__decorate([
    TypeGraphQL.Field(_type => AttestationWhereUniqueInput_1.AttestationWhereUniqueInput, {
        nullable: false
    }),
    tslib_1.__metadata("design:type", AttestationWhereUniqueInput_1.AttestationWhereUniqueInput)
], AttestationUpsertWithWhereUniqueWithoutSchemaInput.prototype, "where", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => AttestationUpdateWithoutSchemaInput_1.AttestationUpdateWithoutSchemaInput, {
        nullable: false
    }),
    tslib_1.__metadata("design:type", AttestationUpdateWithoutSchemaInput_1.AttestationUpdateWithoutSchemaInput)
], AttestationUpsertWithWhereUniqueWithoutSchemaInput.prototype, "update", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => AttestationCreateWithoutSchemaInput_1.AttestationCreateWithoutSchemaInput, {
        nullable: false
    }),
    tslib_1.__metadata("design:type", AttestationCreateWithoutSchemaInput_1.AttestationCreateWithoutSchemaInput)
], AttestationUpsertWithWhereUniqueWithoutSchemaInput.prototype, "create", void 0);
AttestationUpsertWithWhereUniqueWithoutSchemaInput = tslib_1.__decorate([
    TypeGraphQL.InputType("AttestationUpsertWithWhereUniqueWithoutSchemaInput", {
        isAbstract: true
    })
], AttestationUpsertWithWhereUniqueWithoutSchemaInput);
exports.AttestationUpsertWithWhereUniqueWithoutSchemaInput = AttestationUpsertWithWhereUniqueWithoutSchemaInput;
