"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SchemaNameUpdateManyWithWhereWithoutSchemaInput = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = tslib_1.__importStar(require("type-graphql"));
const SchemaNameScalarWhereInput_1 = require("../inputs/SchemaNameScalarWhereInput");
const SchemaNameUpdateManyMutationInput_1 = require("../inputs/SchemaNameUpdateManyMutationInput");
let SchemaNameUpdateManyWithWhereWithoutSchemaInput = class SchemaNameUpdateManyWithWhereWithoutSchemaInput {
};
tslib_1.__decorate([
    TypeGraphQL.Field(_type => SchemaNameScalarWhereInput_1.SchemaNameScalarWhereInput, {
        nullable: false
    }),
    tslib_1.__metadata("design:type", SchemaNameScalarWhereInput_1.SchemaNameScalarWhereInput)
], SchemaNameUpdateManyWithWhereWithoutSchemaInput.prototype, "where", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => SchemaNameUpdateManyMutationInput_1.SchemaNameUpdateManyMutationInput, {
        nullable: false
    }),
    tslib_1.__metadata("design:type", SchemaNameUpdateManyMutationInput_1.SchemaNameUpdateManyMutationInput)
], SchemaNameUpdateManyWithWhereWithoutSchemaInput.prototype, "data", void 0);
SchemaNameUpdateManyWithWhereWithoutSchemaInput = tslib_1.__decorate([
    TypeGraphQL.InputType("SchemaNameUpdateManyWithWhereWithoutSchemaInput", {
        isAbstract: true
    })
], SchemaNameUpdateManyWithWhereWithoutSchemaInput);
exports.SchemaNameUpdateManyWithWhereWithoutSchemaInput = SchemaNameUpdateManyWithWhereWithoutSchemaInput;
