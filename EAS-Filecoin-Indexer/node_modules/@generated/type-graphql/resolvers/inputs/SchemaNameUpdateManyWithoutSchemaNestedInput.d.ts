import { SchemaNameCreateManySchemaInputEnvelope } from "../inputs/SchemaNameCreateManySchemaInputEnvelope";
import { SchemaNameCreateOrConnectWithoutSchemaInput } from "../inputs/SchemaNameCreateOrConnectWithoutSchemaInput";
import { SchemaNameCreateWithoutSchemaInput } from "../inputs/SchemaNameCreateWithoutSchemaInput";
import { SchemaNameScalarWhereInput } from "../inputs/SchemaNameScalarWhereInput";
import { SchemaNameUpdateManyWithWhereWithoutSchemaInput } from "../inputs/SchemaNameUpdateManyWithWhereWithoutSchemaInput";
import { SchemaNameUpdateWithWhereUniqueWithoutSchemaInput } from "../inputs/SchemaNameUpdateWithWhereUniqueWithoutSchemaInput";
import { SchemaNameUpsertWithWhereUniqueWithoutSchemaInput } from "../inputs/SchemaNameUpsertWithWhereUniqueWithoutSchemaInput";
import { SchemaNameWhereUniqueInput } from "../inputs/SchemaNameWhereUniqueInput";
export declare class SchemaNameUpdateManyWithoutSchemaNestedInput {
    create?: SchemaNameCreateWithoutSchemaInput[] | undefined;
    connectOrCreate?: SchemaNameCreateOrConnectWithoutSchemaInput[] | undefined;
    upsert?: SchemaNameUpsertWithWhereUniqueWithoutSchemaInput[] | undefined;
    createMany?: SchemaNameCreateManySchemaInputEnvelope | undefined;
    set?: SchemaNameWhereUniqueInput[] | undefined;
    disconnect?: SchemaNameWhereUniqueInput[] | undefined;
    delete?: SchemaNameWhereUniqueInput[] | undefined;
    connect?: SchemaNameWhereUniqueInput[] | undefined;
    update?: SchemaNameUpdateWithWhereUniqueWithoutSchemaInput[] | undefined;
    updateMany?: SchemaNameUpdateManyWithWhereWithoutSchemaInput[] | undefined;
    deleteMany?: SchemaNameScalarWhereInput[] | undefined;
}
