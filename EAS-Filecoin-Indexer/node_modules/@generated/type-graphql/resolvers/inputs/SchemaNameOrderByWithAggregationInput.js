"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SchemaNameOrderByWithAggregationInput = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = tslib_1.__importStar(require("type-graphql"));
const SchemaNameAvgOrderByAggregateInput_1 = require("../inputs/SchemaNameAvgOrderByAggregateInput");
const SchemaNameCountOrderByAggregateInput_1 = require("../inputs/SchemaNameCountOrderByAggregateInput");
const SchemaNameMaxOrderByAggregateInput_1 = require("../inputs/SchemaNameMaxOrderByAggregateInput");
const SchemaNameMinOrderByAggregateInput_1 = require("../inputs/SchemaNameMinOrderByAggregateInput");
const SchemaNameSumOrderByAggregateInput_1 = require("../inputs/SchemaNameSumOrderByAggregateInput");
const SortOrder_1 = require("../../enums/SortOrder");
let SchemaNameOrderByWithAggregationInput = class SchemaNameOrderByWithAggregationInput {
};
tslib_1.__decorate([
    TypeGraphQL.Field(_type => SortOrder_1.SortOrder, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", String)
], SchemaNameOrderByWithAggregationInput.prototype, "id", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => SortOrder_1.SortOrder, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", String)
], SchemaNameOrderByWithAggregationInput.prototype, "schemaId", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => SortOrder_1.SortOrder, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", String)
], SchemaNameOrderByWithAggregationInput.prototype, "attesterAddress", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => SortOrder_1.SortOrder, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", String)
], SchemaNameOrderByWithAggregationInput.prototype, "name", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => SortOrder_1.SortOrder, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", String)
], SchemaNameOrderByWithAggregationInput.prototype, "time", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => SortOrder_1.SortOrder, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", String)
], SchemaNameOrderByWithAggregationInput.prototype, "isCreator", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => SchemaNameCountOrderByAggregateInput_1.SchemaNameCountOrderByAggregateInput, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", SchemaNameCountOrderByAggregateInput_1.SchemaNameCountOrderByAggregateInput)
], SchemaNameOrderByWithAggregationInput.prototype, "_count", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => SchemaNameAvgOrderByAggregateInput_1.SchemaNameAvgOrderByAggregateInput, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", SchemaNameAvgOrderByAggregateInput_1.SchemaNameAvgOrderByAggregateInput)
], SchemaNameOrderByWithAggregationInput.prototype, "_avg", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => SchemaNameMaxOrderByAggregateInput_1.SchemaNameMaxOrderByAggregateInput, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", SchemaNameMaxOrderByAggregateInput_1.SchemaNameMaxOrderByAggregateInput)
], SchemaNameOrderByWithAggregationInput.prototype, "_max", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => SchemaNameMinOrderByAggregateInput_1.SchemaNameMinOrderByAggregateInput, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", SchemaNameMinOrderByAggregateInput_1.SchemaNameMinOrderByAggregateInput)
], SchemaNameOrderByWithAggregationInput.prototype, "_min", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => SchemaNameSumOrderByAggregateInput_1.SchemaNameSumOrderByAggregateInput, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", SchemaNameSumOrderByAggregateInput_1.SchemaNameSumOrderByAggregateInput)
], SchemaNameOrderByWithAggregationInput.prototype, "_sum", void 0);
SchemaNameOrderByWithAggregationInput = tslib_1.__decorate([
    TypeGraphQL.InputType("SchemaNameOrderByWithAggregationInput", {
        isAbstract: true
    })
], SchemaNameOrderByWithAggregationInput);
exports.SchemaNameOrderByWithAggregationInput = SchemaNameOrderByWithAggregationInput;
