"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AggregateAttestationResolver = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = tslib_1.__importStar(require("type-graphql"));
const AggregateAttestationArgs_1 = require("./args/AggregateAttestationArgs");
const Attestation_1 = require("../../../models/Attestation");
const AggregateAttestation_1 = require("../../outputs/AggregateAttestation");
const helpers_1 = require("../../../helpers");
let AggregateAttestationResolver = class AggregateAttestationResolver {
    async aggregateAttestation(ctx, info, args) {
        return (0, helpers_1.getPrismaFromContext)(ctx).attestation.aggregate({
            ...args,
            ...(0, helpers_1.transformInfoIntoPrismaArgs)(info),
        });
    }
};
tslib_1.__decorate([
    TypeGraphQL.Query(_returns => AggregateAttestation_1.AggregateAttestation, {
        nullable: false
    }),
    tslib_1.__param(0, TypeGraphQL.Ctx()),
    tslib_1.__param(1, TypeGraphQL.Info()),
    tslib_1.__param(2, TypeGraphQL.Args()),
    tslib_1.__metadata("design:type", Function),
    tslib_1.__metadata("design:paramtypes", [Object, Object, AggregateAttestationArgs_1.AggregateAttestationArgs]),
    tslib_1.__metadata("design:returntype", Promise)
], AggregateAttestationResolver.prototype, "aggregateAttestation", null);
AggregateAttestationResolver = tslib_1.__decorate([
    TypeGraphQL.Resolver(_of => Attestation_1.Attestation)
], AggregateAttestationResolver);
exports.AggregateAttestationResolver = AggregateAttestationResolver;
