"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.FindFirstAttestationOrThrowArgs = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = tslib_1.__importStar(require("type-graphql"));
const AttestationOrderByWithRelationInput_1 = require("../../../inputs/AttestationOrderByWithRelationInput");
const AttestationWhereInput_1 = require("../../../inputs/AttestationWhereInput");
const AttestationWhereUniqueInput_1 = require("../../../inputs/AttestationWhereUniqueInput");
const AttestationScalarFieldEnum_1 = require("../../../../enums/AttestationScalarFieldEnum");
let FindFirstAttestationOrThrowArgs = class FindFirstAttestationOrThrowArgs {
};
tslib_1.__decorate([
    TypeGraphQL.Field(_type => AttestationWhereInput_1.AttestationWhereInput, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", AttestationWhereInput_1.AttestationWhereInput)
], FindFirstAttestationOrThrowArgs.prototype, "where", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => [AttestationOrderByWithRelationInput_1.AttestationOrderByWithRelationInput], {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Array)
], FindFirstAttestationOrThrowArgs.prototype, "orderBy", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => AttestationWhereUniqueInput_1.AttestationWhereUniqueInput, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", AttestationWhereUniqueInput_1.AttestationWhereUniqueInput)
], FindFirstAttestationOrThrowArgs.prototype, "cursor", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => TypeGraphQL.Int, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Number)
], FindFirstAttestationOrThrowArgs.prototype, "take", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => TypeGraphQL.Int, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Number)
], FindFirstAttestationOrThrowArgs.prototype, "skip", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => [AttestationScalarFieldEnum_1.AttestationScalarFieldEnum], {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Array)
], FindFirstAttestationOrThrowArgs.prototype, "distinct", void 0);
FindFirstAttestationOrThrowArgs = tslib_1.__decorate([
    TypeGraphQL.ArgsType()
], FindFirstAttestationOrThrowArgs);
exports.FindFirstAttestationOrThrowArgs = FindFirstAttestationOrThrowArgs;
