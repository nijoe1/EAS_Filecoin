"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AggregateTimestampResolver = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = tslib_1.__importStar(require("type-graphql"));
const AggregateTimestampArgs_1 = require("./args/AggregateTimestampArgs");
const Timestamp_1 = require("../../../models/Timestamp");
const AggregateTimestamp_1 = require("../../outputs/AggregateTimestamp");
const helpers_1 = require("../../../helpers");
let AggregateTimestampResolver = class AggregateTimestampResolver {
    async aggregateTimestamp(ctx, info, args) {
        return (0, helpers_1.getPrismaFromContext)(ctx).timestamp.aggregate({
            ...args,
            ...(0, helpers_1.transformInfoIntoPrismaArgs)(info),
        });
    }
};
tslib_1.__decorate([
    TypeGraphQL.Query(_returns => AggregateTimestamp_1.AggregateTimestamp, {
        nullable: false
    }),
    tslib_1.__param(0, TypeGraphQL.Ctx()),
    tslib_1.__param(1, TypeGraphQL.Info()),
    tslib_1.__param(2, TypeGraphQL.Args()),
    tslib_1.__metadata("design:type", Function),
    tslib_1.__metadata("design:paramtypes", [Object, Object, AggregateTimestampArgs_1.AggregateTimestampArgs]),
    tslib_1.__metadata("design:returntype", Promise)
], AggregateTimestampResolver.prototype, "aggregateTimestamp", null);
AggregateTimestampResolver = tslib_1.__decorate([
    TypeGraphQL.Resolver(_of => Timestamp_1.Timestamp)
], AggregateTimestampResolver);
exports.AggregateTimestampResolver = AggregateTimestampResolver;
