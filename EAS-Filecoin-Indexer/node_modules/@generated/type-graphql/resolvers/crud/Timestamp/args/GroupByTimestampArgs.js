"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.GroupByTimestampArgs = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = tslib_1.__importStar(require("type-graphql"));
const TimestampOrderByWithAggregationInput_1 = require("../../../inputs/TimestampOrderByWithAggregationInput");
const TimestampScalarWhereWithAggregatesInput_1 = require("../../../inputs/TimestampScalarWhereWithAggregatesInput");
const TimestampWhereInput_1 = require("../../../inputs/TimestampWhereInput");
const TimestampScalarFieldEnum_1 = require("../../../../enums/TimestampScalarFieldEnum");
let GroupByTimestampArgs = class GroupByTimestampArgs {
};
tslib_1.__decorate([
    TypeGraphQL.Field(_type => TimestampWhereInput_1.TimestampWhereInput, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", TimestampWhereInput_1.TimestampWhereInput)
], GroupByTimestampArgs.prototype, "where", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => [TimestampOrderByWithAggregationInput_1.TimestampOrderByWithAggregationInput], {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Array)
], GroupByTimestampArgs.prototype, "orderBy", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => [TimestampScalarFieldEnum_1.TimestampScalarFieldEnum], {
        nullable: false
    }),
    tslib_1.__metadata("design:type", Array)
], GroupByTimestampArgs.prototype, "by", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => TimestampScalarWhereWithAggregatesInput_1.TimestampScalarWhereWithAggregatesInput, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", TimestampScalarWhereWithAggregatesInput_1.TimestampScalarWhereWithAggregatesInput)
], GroupByTimestampArgs.prototype, "having", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => TypeGraphQL.Int, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Number)
], GroupByTimestampArgs.prototype, "take", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => TypeGraphQL.Int, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Number)
], GroupByTimestampArgs.prototype, "skip", void 0);
GroupByTimestampArgs = tslib_1.__decorate([
    TypeGraphQL.ArgsType()
], GroupByTimestampArgs);
exports.GroupByTimestampArgs = GroupByTimestampArgs;
