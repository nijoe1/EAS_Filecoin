"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.FindFirstServiceStatOrThrowResolver = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = tslib_1.__importStar(require("type-graphql"));
const FindFirstServiceStatOrThrowArgs_1 = require("./args/FindFirstServiceStatOrThrowArgs");
const ServiceStat_1 = require("../../../models/ServiceStat");
const helpers_1 = require("../../../helpers");
let FindFirstServiceStatOrThrowResolver = class FindFirstServiceStatOrThrowResolver {
    async findFirstServiceStatOrThrow(ctx, info, args) {
        const { _count } = (0, helpers_1.transformInfoIntoPrismaArgs)(info);
        return (0, helpers_1.getPrismaFromContext)(ctx).serviceStat.findFirstOrThrow({
            ...args,
            ...(_count && (0, helpers_1.transformCountFieldIntoSelectRelationsCount)(_count)),
        });
    }
};
tslib_1.__decorate([
    TypeGraphQL.Query(_returns => ServiceStat_1.ServiceStat, {
        nullable: true
    }),
    tslib_1.__param(0, TypeGraphQL.Ctx()),
    tslib_1.__param(1, TypeGraphQL.Info()),
    tslib_1.__param(2, TypeGraphQL.Args()),
    tslib_1.__metadata("design:type", Function),
    tslib_1.__metadata("design:paramtypes", [Object, Object, FindFirstServiceStatOrThrowArgs_1.FindFirstServiceStatOrThrowArgs]),
    tslib_1.__metadata("design:returntype", Promise)
], FindFirstServiceStatOrThrowResolver.prototype, "findFirstServiceStatOrThrow", null);
FindFirstServiceStatOrThrowResolver = tslib_1.__decorate([
    TypeGraphQL.Resolver(_of => ServiceStat_1.ServiceStat)
], FindFirstServiceStatOrThrowResolver);
exports.FindFirstServiceStatOrThrowResolver = FindFirstServiceStatOrThrowResolver;
