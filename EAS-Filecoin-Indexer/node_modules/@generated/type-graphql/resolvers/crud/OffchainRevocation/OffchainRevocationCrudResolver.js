"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.OffchainRevocationCrudResolver = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = tslib_1.__importStar(require("type-graphql"));
const AggregateOffchainRevocationArgs_1 = require("./args/AggregateOffchainRevocationArgs");
const CreateManyOffchainRevocationArgs_1 = require("./args/CreateManyOffchainRevocationArgs");
const CreateOneOffchainRevocationArgs_1 = require("./args/CreateOneOffchainRevocationArgs");
const DeleteManyOffchainRevocationArgs_1 = require("./args/DeleteManyOffchainRevocationArgs");
const DeleteOneOffchainRevocationArgs_1 = require("./args/DeleteOneOffchainRevocationArgs");
const FindFirstOffchainRevocationArgs_1 = require("./args/FindFirstOffchainRevocationArgs");
const FindFirstOffchainRevocationOrThrowArgs_1 = require("./args/FindFirstOffchainRevocationOrThrowArgs");
const FindManyOffchainRevocationArgs_1 = require("./args/FindManyOffchainRevocationArgs");
const FindUniqueOffchainRevocationArgs_1 = require("./args/FindUniqueOffchainRevocationArgs");
const FindUniqueOffchainRevocationOrThrowArgs_1 = require("./args/FindUniqueOffchainRevocationOrThrowArgs");
const GroupByOffchainRevocationArgs_1 = require("./args/GroupByOffchainRevocationArgs");
const UpdateManyOffchainRevocationArgs_1 = require("./args/UpdateManyOffchainRevocationArgs");
const UpdateOneOffchainRevocationArgs_1 = require("./args/UpdateOneOffchainRevocationArgs");
const UpsertOneOffchainRevocationArgs_1 = require("./args/UpsertOneOffchainRevocationArgs");
const helpers_1 = require("../../../helpers");
const OffchainRevocation_1 = require("../../../models/OffchainRevocation");
const AffectedRowsOutput_1 = require("../../outputs/AffectedRowsOutput");
const AggregateOffchainRevocation_1 = require("../../outputs/AggregateOffchainRevocation");
const OffchainRevocationGroupBy_1 = require("../../outputs/OffchainRevocationGroupBy");
let OffchainRevocationCrudResolver = class OffchainRevocationCrudResolver {
    async aggregateOffchainRevocation(ctx, info, args) {
        return (0, helpers_1.getPrismaFromContext)(ctx).offchainRevocation.aggregate({
            ...args,
            ...(0, helpers_1.transformInfoIntoPrismaArgs)(info),
        });
    }
    async createManyOffchainRevocation(ctx, info, args) {
        const { _count } = (0, helpers_1.transformInfoIntoPrismaArgs)(info);
        return (0, helpers_1.getPrismaFromContext)(ctx).offchainRevocation.createMany({
            ...args,
            ...(_count && (0, helpers_1.transformCountFieldIntoSelectRelationsCount)(_count)),
        });
    }
    async createOneOffchainRevocation(ctx, info, args) {
        const { _count } = (0, helpers_1.transformInfoIntoPrismaArgs)(info);
        return (0, helpers_1.getPrismaFromContext)(ctx).offchainRevocation.create({
            ...args,
            ...(_count && (0, helpers_1.transformCountFieldIntoSelectRelationsCount)(_count)),
        });
    }
    async deleteManyOffchainRevocation(ctx, info, args) {
        const { _count } = (0, helpers_1.transformInfoIntoPrismaArgs)(info);
        return (0, helpers_1.getPrismaFromContext)(ctx).offchainRevocation.deleteMany({
            ...args,
            ...(_count && (0, helpers_1.transformCountFieldIntoSelectRelationsCount)(_count)),
        });
    }
    async deleteOneOffchainRevocation(ctx, info, args) {
        const { _count } = (0, helpers_1.transformInfoIntoPrismaArgs)(info);
        return (0, helpers_1.getPrismaFromContext)(ctx).offchainRevocation.delete({
            ...args,
            ...(_count && (0, helpers_1.transformCountFieldIntoSelectRelationsCount)(_count)),
        });
    }
    async findFirstOffchainRevocation(ctx, info, args) {
        const { _count } = (0, helpers_1.transformInfoIntoPrismaArgs)(info);
        return (0, helpers_1.getPrismaFromContext)(ctx).offchainRevocation.findFirst({
            ...args,
            ...(_count && (0, helpers_1.transformCountFieldIntoSelectRelationsCount)(_count)),
        });
    }
    async findFirstOffchainRevocationOrThrow(ctx, info, args) {
        const { _count } = (0, helpers_1.transformInfoIntoPrismaArgs)(info);
        return (0, helpers_1.getPrismaFromContext)(ctx).offchainRevocation.findFirstOrThrow({
            ...args,
            ...(_count && (0, helpers_1.transformCountFieldIntoSelectRelationsCount)(_count)),
        });
    }
    async offchainRevocations(ctx, info, args) {
        const { _count } = (0, helpers_1.transformInfoIntoPrismaArgs)(info);
        return (0, helpers_1.getPrismaFromContext)(ctx).offchainRevocation.findMany({
            ...args,
            ...(_count && (0, helpers_1.transformCountFieldIntoSelectRelationsCount)(_count)),
        });
    }
    async offchainRevocation(ctx, info, args) {
        const { _count } = (0, helpers_1.transformInfoIntoPrismaArgs)(info);
        return (0, helpers_1.getPrismaFromContext)(ctx).offchainRevocation.findUnique({
            ...args,
            ...(_count && (0, helpers_1.transformCountFieldIntoSelectRelationsCount)(_count)),
        });
    }
    async getOffchainRevocation(ctx, info, args) {
        const { _count } = (0, helpers_1.transformInfoIntoPrismaArgs)(info);
        return (0, helpers_1.getPrismaFromContext)(ctx).offchainRevocation.findUniqueOrThrow({
            ...args,
            ...(_count && (0, helpers_1.transformCountFieldIntoSelectRelationsCount)(_count)),
        });
    }
    async groupByOffchainRevocation(ctx, info, args) {
        const { _count, _avg, _sum, _min, _max } = (0, helpers_1.transformInfoIntoPrismaArgs)(info);
        return (0, helpers_1.getPrismaFromContext)(ctx).offchainRevocation.groupBy({
            ...args,
            ...Object.fromEntries(Object.entries({ _count, _avg, _sum, _min, _max }).filter(([_, v]) => v != null)),
        });
    }
    async updateManyOffchainRevocation(ctx, info, args) {
        const { _count } = (0, helpers_1.transformInfoIntoPrismaArgs)(info);
        return (0, helpers_1.getPrismaFromContext)(ctx).offchainRevocation.updateMany({
            ...args,
            ...(_count && (0, helpers_1.transformCountFieldIntoSelectRelationsCount)(_count)),
        });
    }
    async updateOneOffchainRevocation(ctx, info, args) {
        const { _count } = (0, helpers_1.transformInfoIntoPrismaArgs)(info);
        return (0, helpers_1.getPrismaFromContext)(ctx).offchainRevocation.update({
            ...args,
            ...(_count && (0, helpers_1.transformCountFieldIntoSelectRelationsCount)(_count)),
        });
    }
    async upsertOneOffchainRevocation(ctx, info, args) {
        const { _count } = (0, helpers_1.transformInfoIntoPrismaArgs)(info);
        return (0, helpers_1.getPrismaFromContext)(ctx).offchainRevocation.upsert({
            ...args,
            ...(_count && (0, helpers_1.transformCountFieldIntoSelectRelationsCount)(_count)),
        });
    }
};
tslib_1.__decorate([
    TypeGraphQL.Query(_returns => AggregateOffchainRevocation_1.AggregateOffchainRevocation, {
        nullable: false
    }),
    tslib_1.__param(0, TypeGraphQL.Ctx()),
    tslib_1.__param(1, TypeGraphQL.Info()),
    tslib_1.__param(2, TypeGraphQL.Args()),
    tslib_1.__metadata("design:type", Function),
    tslib_1.__metadata("design:paramtypes", [Object, Object, AggregateOffchainRevocationArgs_1.AggregateOffchainRevocationArgs]),
    tslib_1.__metadata("design:returntype", Promise)
], OffchainRevocationCrudResolver.prototype, "aggregateOffchainRevocation", null);
tslib_1.__decorate([
    TypeGraphQL.Mutation(_returns => AffectedRowsOutput_1.AffectedRowsOutput, {
        nullable: false
    }),
    tslib_1.__param(0, TypeGraphQL.Ctx()),
    tslib_1.__param(1, TypeGraphQL.Info()),
    tslib_1.__param(2, TypeGraphQL.Args()),
    tslib_1.__metadata("design:type", Function),
    tslib_1.__metadata("design:paramtypes", [Object, Object, CreateManyOffchainRevocationArgs_1.CreateManyOffchainRevocationArgs]),
    tslib_1.__metadata("design:returntype", Promise)
], OffchainRevocationCrudResolver.prototype, "createManyOffchainRevocation", null);
tslib_1.__decorate([
    TypeGraphQL.Mutation(_returns => OffchainRevocation_1.OffchainRevocation, {
        nullable: false
    }),
    tslib_1.__param(0, TypeGraphQL.Ctx()),
    tslib_1.__param(1, TypeGraphQL.Info()),
    tslib_1.__param(2, TypeGraphQL.Args()),
    tslib_1.__metadata("design:type", Function),
    tslib_1.__metadata("design:paramtypes", [Object, Object, CreateOneOffchainRevocationArgs_1.CreateOneOffchainRevocationArgs]),
    tslib_1.__metadata("design:returntype", Promise)
], OffchainRevocationCrudResolver.prototype, "createOneOffchainRevocation", null);
tslib_1.__decorate([
    TypeGraphQL.Mutation(_returns => AffectedRowsOutput_1.AffectedRowsOutput, {
        nullable: false
    }),
    tslib_1.__param(0, TypeGraphQL.Ctx()),
    tslib_1.__param(1, TypeGraphQL.Info()),
    tslib_1.__param(2, TypeGraphQL.Args()),
    tslib_1.__metadata("design:type", Function),
    tslib_1.__metadata("design:paramtypes", [Object, Object, DeleteManyOffchainRevocationArgs_1.DeleteManyOffchainRevocationArgs]),
    tslib_1.__metadata("design:returntype", Promise)
], OffchainRevocationCrudResolver.prototype, "deleteManyOffchainRevocation", null);
tslib_1.__decorate([
    TypeGraphQL.Mutation(_returns => OffchainRevocation_1.OffchainRevocation, {
        nullable: true
    }),
    tslib_1.__param(0, TypeGraphQL.Ctx()),
    tslib_1.__param(1, TypeGraphQL.Info()),
    tslib_1.__param(2, TypeGraphQL.Args()),
    tslib_1.__metadata("design:type", Function),
    tslib_1.__metadata("design:paramtypes", [Object, Object, DeleteOneOffchainRevocationArgs_1.DeleteOneOffchainRevocationArgs]),
    tslib_1.__metadata("design:returntype", Promise)
], OffchainRevocationCrudResolver.prototype, "deleteOneOffchainRevocation", null);
tslib_1.__decorate([
    TypeGraphQL.Query(_returns => OffchainRevocation_1.OffchainRevocation, {
        nullable: true
    }),
    tslib_1.__param(0, TypeGraphQL.Ctx()),
    tslib_1.__param(1, TypeGraphQL.Info()),
    tslib_1.__param(2, TypeGraphQL.Args()),
    tslib_1.__metadata("design:type", Function),
    tslib_1.__metadata("design:paramtypes", [Object, Object, FindFirstOffchainRevocationArgs_1.FindFirstOffchainRevocationArgs]),
    tslib_1.__metadata("design:returntype", Promise)
], OffchainRevocationCrudResolver.prototype, "findFirstOffchainRevocation", null);
tslib_1.__decorate([
    TypeGraphQL.Query(_returns => OffchainRevocation_1.OffchainRevocation, {
        nullable: true
    }),
    tslib_1.__param(0, TypeGraphQL.Ctx()),
    tslib_1.__param(1, TypeGraphQL.Info()),
    tslib_1.__param(2, TypeGraphQL.Args()),
    tslib_1.__metadata("design:type", Function),
    tslib_1.__metadata("design:paramtypes", [Object, Object, FindFirstOffchainRevocationOrThrowArgs_1.FindFirstOffchainRevocationOrThrowArgs]),
    tslib_1.__metadata("design:returntype", Promise)
], OffchainRevocationCrudResolver.prototype, "findFirstOffchainRevocationOrThrow", null);
tslib_1.__decorate([
    TypeGraphQL.Query(_returns => [OffchainRevocation_1.OffchainRevocation], {
        nullable: false
    }),
    tslib_1.__param(0, TypeGraphQL.Ctx()),
    tslib_1.__param(1, TypeGraphQL.Info()),
    tslib_1.__param(2, TypeGraphQL.Args()),
    tslib_1.__metadata("design:type", Function),
    tslib_1.__metadata("design:paramtypes", [Object, Object, FindManyOffchainRevocationArgs_1.FindManyOffchainRevocationArgs]),
    tslib_1.__metadata("design:returntype", Promise)
], OffchainRevocationCrudResolver.prototype, "offchainRevocations", null);
tslib_1.__decorate([
    TypeGraphQL.Query(_returns => OffchainRevocation_1.OffchainRevocation, {
        nullable: true
    }),
    tslib_1.__param(0, TypeGraphQL.Ctx()),
    tslib_1.__param(1, TypeGraphQL.Info()),
    tslib_1.__param(2, TypeGraphQL.Args()),
    tslib_1.__metadata("design:type", Function),
    tslib_1.__metadata("design:paramtypes", [Object, Object, FindUniqueOffchainRevocationArgs_1.FindUniqueOffchainRevocationArgs]),
    tslib_1.__metadata("design:returntype", Promise)
], OffchainRevocationCrudResolver.prototype, "offchainRevocation", null);
tslib_1.__decorate([
    TypeGraphQL.Query(_returns => OffchainRevocation_1.OffchainRevocation, {
        nullable: true
    }),
    tslib_1.__param(0, TypeGraphQL.Ctx()),
    tslib_1.__param(1, TypeGraphQL.Info()),
    tslib_1.__param(2, TypeGraphQL.Args()),
    tslib_1.__metadata("design:type", Function),
    tslib_1.__metadata("design:paramtypes", [Object, Object, FindUniqueOffchainRevocationOrThrowArgs_1.FindUniqueOffchainRevocationOrThrowArgs]),
    tslib_1.__metadata("design:returntype", Promise)
], OffchainRevocationCrudResolver.prototype, "getOffchainRevocation", null);
tslib_1.__decorate([
    TypeGraphQL.Query(_returns => [OffchainRevocationGroupBy_1.OffchainRevocationGroupBy], {
        nullable: false
    }),
    tslib_1.__param(0, TypeGraphQL.Ctx()),
    tslib_1.__param(1, TypeGraphQL.Info()),
    tslib_1.__param(2, TypeGraphQL.Args()),
    tslib_1.__metadata("design:type", Function),
    tslib_1.__metadata("design:paramtypes", [Object, Object, GroupByOffchainRevocationArgs_1.GroupByOffchainRevocationArgs]),
    tslib_1.__metadata("design:returntype", Promise)
], OffchainRevocationCrudResolver.prototype, "groupByOffchainRevocation", null);
tslib_1.__decorate([
    TypeGraphQL.Mutation(_returns => AffectedRowsOutput_1.AffectedRowsOutput, {
        nullable: false
    }),
    tslib_1.__param(0, TypeGraphQL.Ctx()),
    tslib_1.__param(1, TypeGraphQL.Info()),
    tslib_1.__param(2, TypeGraphQL.Args()),
    tslib_1.__metadata("design:type", Function),
    tslib_1.__metadata("design:paramtypes", [Object, Object, UpdateManyOffchainRevocationArgs_1.UpdateManyOffchainRevocationArgs]),
    tslib_1.__metadata("design:returntype", Promise)
], OffchainRevocationCrudResolver.prototype, "updateManyOffchainRevocation", null);
tslib_1.__decorate([
    TypeGraphQL.Mutation(_returns => OffchainRevocation_1.OffchainRevocation, {
        nullable: true
    }),
    tslib_1.__param(0, TypeGraphQL.Ctx()),
    tslib_1.__param(1, TypeGraphQL.Info()),
    tslib_1.__param(2, TypeGraphQL.Args()),
    tslib_1.__metadata("design:type", Function),
    tslib_1.__metadata("design:paramtypes", [Object, Object, UpdateOneOffchainRevocationArgs_1.UpdateOneOffchainRevocationArgs]),
    tslib_1.__metadata("design:returntype", Promise)
], OffchainRevocationCrudResolver.prototype, "updateOneOffchainRevocation", null);
tslib_1.__decorate([
    TypeGraphQL.Mutation(_returns => OffchainRevocation_1.OffchainRevocation, {
        nullable: false
    }),
    tslib_1.__param(0, TypeGraphQL.Ctx()),
    tslib_1.__param(1, TypeGraphQL.Info()),
    tslib_1.__param(2, TypeGraphQL.Args()),
    tslib_1.__metadata("design:type", Function),
    tslib_1.__metadata("design:paramtypes", [Object, Object, UpsertOneOffchainRevocationArgs_1.UpsertOneOffchainRevocationArgs]),
    tslib_1.__metadata("design:returntype", Promise)
], OffchainRevocationCrudResolver.prototype, "upsertOneOffchainRevocation", null);
OffchainRevocationCrudResolver = tslib_1.__decorate([
    TypeGraphQL.Resolver(_of => OffchainRevocation_1.OffchainRevocation)
], OffchainRevocationCrudResolver);
exports.OffchainRevocationCrudResolver = OffchainRevocationCrudResolver;
