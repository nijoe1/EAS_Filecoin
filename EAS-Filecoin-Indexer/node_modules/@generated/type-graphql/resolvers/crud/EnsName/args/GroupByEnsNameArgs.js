"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.GroupByEnsNameArgs = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = tslib_1.__importStar(require("type-graphql"));
const EnsNameOrderByWithAggregationInput_1 = require("../../../inputs/EnsNameOrderByWithAggregationInput");
const EnsNameScalarWhereWithAggregatesInput_1 = require("../../../inputs/EnsNameScalarWhereWithAggregatesInput");
const EnsNameWhereInput_1 = require("../../../inputs/EnsNameWhereInput");
const EnsNameScalarFieldEnum_1 = require("../../../../enums/EnsNameScalarFieldEnum");
let GroupByEnsNameArgs = class GroupByEnsNameArgs {
};
tslib_1.__decorate([
    TypeGraphQL.Field(_type => EnsNameWhereInput_1.EnsNameWhereInput, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", EnsNameWhereInput_1.EnsNameWhereInput)
], GroupByEnsNameArgs.prototype, "where", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => [EnsNameOrderByWithAggregationInput_1.EnsNameOrderByWithAggregationInput], {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Array)
], GroupByEnsNameArgs.prototype, "orderBy", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => [EnsNameScalarFieldEnum_1.EnsNameScalarFieldEnum], {
        nullable: false
    }),
    tslib_1.__metadata("design:type", Array)
], GroupByEnsNameArgs.prototype, "by", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => EnsNameScalarWhereWithAggregatesInput_1.EnsNameScalarWhereWithAggregatesInput, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", EnsNameScalarWhereWithAggregatesInput_1.EnsNameScalarWhereWithAggregatesInput)
], GroupByEnsNameArgs.prototype, "having", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => TypeGraphQL.Int, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Number)
], GroupByEnsNameArgs.prototype, "take", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => TypeGraphQL.Int, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Number)
], GroupByEnsNameArgs.prototype, "skip", void 0);
GroupByEnsNameArgs = tslib_1.__decorate([
    TypeGraphQL.ArgsType()
], GroupByEnsNameArgs);
exports.GroupByEnsNameArgs = GroupByEnsNameArgs;
