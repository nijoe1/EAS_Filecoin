"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.FindManyEnsNameArgs = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = tslib_1.__importStar(require("type-graphql"));
const EnsNameOrderByWithRelationInput_1 = require("../../../inputs/EnsNameOrderByWithRelationInput");
const EnsNameWhereInput_1 = require("../../../inputs/EnsNameWhereInput");
const EnsNameWhereUniqueInput_1 = require("../../../inputs/EnsNameWhereUniqueInput");
const EnsNameScalarFieldEnum_1 = require("../../../../enums/EnsNameScalarFieldEnum");
let FindManyEnsNameArgs = class FindManyEnsNameArgs {
};
tslib_1.__decorate([
    TypeGraphQL.Field(_type => EnsNameWhereInput_1.EnsNameWhereInput, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", EnsNameWhereInput_1.EnsNameWhereInput)
], FindManyEnsNameArgs.prototype, "where", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => [EnsNameOrderByWithRelationInput_1.EnsNameOrderByWithRelationInput], {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Array)
], FindManyEnsNameArgs.prototype, "orderBy", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => EnsNameWhereUniqueInput_1.EnsNameWhereUniqueInput, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", EnsNameWhereUniqueInput_1.EnsNameWhereUniqueInput)
], FindManyEnsNameArgs.prototype, "cursor", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => TypeGraphQL.Int, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Number)
], FindManyEnsNameArgs.prototype, "take", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => TypeGraphQL.Int, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Number)
], FindManyEnsNameArgs.prototype, "skip", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => [EnsNameScalarFieldEnum_1.EnsNameScalarFieldEnum], {
        nullable: true
    }),
    tslib_1.__metadata("design:type", Array)
], FindManyEnsNameArgs.prototype, "distinct", void 0);
FindManyEnsNameArgs = tslib_1.__decorate([
    TypeGraphQL.ArgsType()
], FindManyEnsNameArgs);
exports.FindManyEnsNameArgs = FindManyEnsNameArgs;
