"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AggregateEnsNameResolver = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = tslib_1.__importStar(require("type-graphql"));
const AggregateEnsNameArgs_1 = require("./args/AggregateEnsNameArgs");
const EnsName_1 = require("../../../models/EnsName");
const AggregateEnsName_1 = require("../../outputs/AggregateEnsName");
const helpers_1 = require("../../../helpers");
let AggregateEnsNameResolver = class AggregateEnsNameResolver {
    async aggregateEnsName(ctx, info, args) {
        return (0, helpers_1.getPrismaFromContext)(ctx).ensName.aggregate({
            ...args,
            ...(0, helpers_1.transformInfoIntoPrismaArgs)(info),
        });
    }
};
tslib_1.__decorate([
    TypeGraphQL.Query(_returns => AggregateEnsName_1.AggregateEnsName, {
        nullable: false
    }),
    tslib_1.__param(0, TypeGraphQL.Ctx()),
    tslib_1.__param(1, TypeGraphQL.Info()),
    tslib_1.__param(2, TypeGraphQL.Args()),
    tslib_1.__metadata("design:type", Function),
    tslib_1.__metadata("design:paramtypes", [Object, Object, AggregateEnsNameArgs_1.AggregateEnsNameArgs]),
    tslib_1.__metadata("design:returntype", Promise)
], AggregateEnsNameResolver.prototype, "aggregateEnsName", null);
AggregateEnsNameResolver = tslib_1.__decorate([
    TypeGraphQL.Resolver(_of => EnsName_1.EnsName)
], AggregateEnsNameResolver);
exports.AggregateEnsNameResolver = AggregateEnsNameResolver;
