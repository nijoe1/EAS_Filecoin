"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TimestampGroupBy = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = tslib_1.__importStar(require("type-graphql"));
const TimestampAvgAggregate_1 = require("../outputs/TimestampAvgAggregate");
const TimestampCountAggregate_1 = require("../outputs/TimestampCountAggregate");
const TimestampMaxAggregate_1 = require("../outputs/TimestampMaxAggregate");
const TimestampMinAggregate_1 = require("../outputs/TimestampMinAggregate");
const TimestampSumAggregate_1 = require("../outputs/TimestampSumAggregate");
let TimestampGroupBy = class TimestampGroupBy {
};
tslib_1.__decorate([
    TypeGraphQL.Field(_type => String, {
        nullable: false
    }),
    tslib_1.__metadata("design:type", String)
], TimestampGroupBy.prototype, "id", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => String, {
        nullable: false
    }),
    tslib_1.__metadata("design:type", String)
], TimestampGroupBy.prototype, "from", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => String, {
        nullable: false
    }),
    tslib_1.__metadata("design:type", String)
], TimestampGroupBy.prototype, "txid", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => String, {
        nullable: false
    }),
    tslib_1.__metadata("design:type", String)
], TimestampGroupBy.prototype, "tree", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => TypeGraphQL.Int, {
        nullable: false
    }),
    tslib_1.__metadata("design:type", Number)
], TimestampGroupBy.prototype, "timestamp", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => TimestampCountAggregate_1.TimestampCountAggregate, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", TimestampCountAggregate_1.TimestampCountAggregate)
], TimestampGroupBy.prototype, "_count", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => TimestampAvgAggregate_1.TimestampAvgAggregate, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", TimestampAvgAggregate_1.TimestampAvgAggregate)
], TimestampGroupBy.prototype, "_avg", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => TimestampSumAggregate_1.TimestampSumAggregate, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", TimestampSumAggregate_1.TimestampSumAggregate)
], TimestampGroupBy.prototype, "_sum", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => TimestampMinAggregate_1.TimestampMinAggregate, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", TimestampMinAggregate_1.TimestampMinAggregate)
], TimestampGroupBy.prototype, "_min", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => TimestampMaxAggregate_1.TimestampMaxAggregate, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", TimestampMaxAggregate_1.TimestampMaxAggregate)
], TimestampGroupBy.prototype, "_max", void 0);
TimestampGroupBy = tslib_1.__decorate([
    TypeGraphQL.ObjectType("TimestampGroupBy", {
        isAbstract: true
    })
], TimestampGroupBy);
exports.TimestampGroupBy = TimestampGroupBy;
