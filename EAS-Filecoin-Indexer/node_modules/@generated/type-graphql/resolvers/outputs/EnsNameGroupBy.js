"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.EnsNameGroupBy = void 0;
const tslib_1 = require("tslib");
const TypeGraphQL = tslib_1.__importStar(require("type-graphql"));
const EnsNameAvgAggregate_1 = require("../outputs/EnsNameAvgAggregate");
const EnsNameCountAggregate_1 = require("../outputs/EnsNameCountAggregate");
const EnsNameMaxAggregate_1 = require("../outputs/EnsNameMaxAggregate");
const EnsNameMinAggregate_1 = require("../outputs/EnsNameMinAggregate");
const EnsNameSumAggregate_1 = require("../outputs/EnsNameSumAggregate");
let EnsNameGroupBy = class EnsNameGroupBy {
};
tslib_1.__decorate([
    TypeGraphQL.Field(_type => String, {
        nullable: false
    }),
    tslib_1.__metadata("design:type", String)
], EnsNameGroupBy.prototype, "id", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => String, {
        nullable: false
    }),
    tslib_1.__metadata("design:type", String)
], EnsNameGroupBy.prototype, "name", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => TypeGraphQL.Int, {
        nullable: false
    }),
    tslib_1.__metadata("design:type", Number)
], EnsNameGroupBy.prototype, "timestamp", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => EnsNameCountAggregate_1.EnsNameCountAggregate, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", EnsNameCountAggregate_1.EnsNameCountAggregate)
], EnsNameGroupBy.prototype, "_count", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => EnsNameAvgAggregate_1.EnsNameAvgAggregate, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", EnsNameAvgAggregate_1.EnsNameAvgAggregate)
], EnsNameGroupBy.prototype, "_avg", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => EnsNameSumAggregate_1.EnsNameSumAggregate, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", EnsNameSumAggregate_1.EnsNameSumAggregate)
], EnsNameGroupBy.prototype, "_sum", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => EnsNameMinAggregate_1.EnsNameMinAggregate, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", EnsNameMinAggregate_1.EnsNameMinAggregate)
], EnsNameGroupBy.prototype, "_min", void 0);
tslib_1.__decorate([
    TypeGraphQL.Field(_type => EnsNameMaxAggregate_1.EnsNameMaxAggregate, {
        nullable: true
    }),
    tslib_1.__metadata("design:type", EnsNameMaxAggregate_1.EnsNameMaxAggregate)
], EnsNameGroupBy.prototype, "_max", void 0);
EnsNameGroupBy = tslib_1.__decorate([
    TypeGraphQL.ObjectType("EnsNameGroupBy", {
        isAbstract: true
    })
], EnsNameGroupBy);
exports.EnsNameGroupBy = EnsNameGroupBy;
